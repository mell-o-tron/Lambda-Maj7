INTEGER     : /[0-9]+/
NOP         : "+" | "*" | "/" | "=" | ">" | ">=" | "<" | "<=" | "&" | "^"
UOP         : "-" | "!"
IDE         : /(?!(true|false|lam|if|then|else)\b)[a-z_][a-z0-9_]*/i
SYM         : IDE
IN          : ";" 
BOOL        : "true" | "false"

anonfun     : "lam" "(" IDE ")" "=>" "{" expr "}"
atom        : INTEGER | anonfun | BOOL
expr_app    : expr expr
lambda      : "lam" "(" IDE ")" "=>" "{" expr "}"
lambda_app  : lambda expr
op          : UOP expr | NOP "(" (expr + ",")* expr ")"
decl        : SYM ":=" expr
letin       : decl IN expr
conditional :  "if" expr "then" expr "else" expr
expr        : conditional | atom | op | lambda_app | expr_app | SYM | "(" + expr + ")" | letin

start       : expr

%import common.WORD   // imports from terminal library
%ignore " "           // Disregard spaces in text
%ignore "\n"           // Disregard spaces in text

COMMENT : /\/\// /.*/
        | /\/\*/ /.*/ /\*\//

%ignore COMMENT
